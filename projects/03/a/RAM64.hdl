// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl
/**
 * Memory of sixty four 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[3..5], a=dMuxA, b=dMuxB, c=dMuxC, d=dMuxD, e=dMuxE, f=dMuxF, g=dMuxG, h=dMuxH);

    RAM8(in=in, load=dMuxA, address=address[0..2], out=oa);
    RAM8(in=in, load=dMuxB, address=address[0..2], out=ob);
    RAM8(in=in, load=dMuxC, address=address[0..2], out=oc);
    RAM8(in=in, load=dMuxD, address=address[0..2], out=od);
    RAM8(in=in, load=dMuxE, address=address[0..2], out=oe);
    RAM8(in=in, load=dMuxF, address=address[0..2], out=of);
    RAM8(in=in, load=dMuxG, address=address[0..2], out=og);
    RAM8(in=in, load=dMuxH, address=address[0..2], out=oh);

    Mux8Way16(a=oa, b=ob, c=oc, d=od, e=oe, f=of, g=og, h=oh, sel=address[3..5], out=out);
}
